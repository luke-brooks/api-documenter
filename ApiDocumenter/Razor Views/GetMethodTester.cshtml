@model ApiDocumenter.PageModel

<style>
    .param-type {
        color: #1C84C6;
    }

    .method-list {
        list-style-type: none;
    }

    body.modal-open {
        overflow: visible;
    }
</style>

<div class="row" id="method-get-tester-view">
    <div class="col col-lg-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h2 class="h4">@Model.CurrentMethod.Name Method Tester</h2>
            </div>
            <div class="panel-body">
                <div class="col col-sm-8 col-lg-10 col-lg-offset-1">
                    <div class="row">
                        <div id="get-submit-view" class="panel panel-default">
                            <div class="panel-heading">
                                <h3 class="panel-title">Method Submission Info</h3>
                            </div>
                            <div class="panel-body">
                                <div id="production-warning" class="error alert-danger jumbotron" hidden>
                                    <h2><strong>BE WARNED - YOU ARE SUBMITTING TO THE PRODUCTION SERVICES URL</strong></h2>
                                </div>
                                @if (Model.ApiId.ToUpper().Equals("SERVICES".ToUpper()))
                                {
                                    <div>
                                        <label for="base-url">Base URL:</label>
                                        <input id="base-url" type="text" style="width:500px" readonly />
                                    </div>
                                }
                                <div>
                                    <label for="extended-url">Extended URL:</label>
                                    <input id="extended-url" type="text" style="width:500px" readonly />
                                </div>
                                <div id="query-str-view" hidden>
                                    <label for="query-string">Query String:</label>
                                    <input id="query-string" type="text" style="width:800px" readonly />
                                </div>
                                @if (Model.CurrentMethod.Parameters.Any())
                                {
                                    <div id="submit-data-view" hidden>
                                        <button id="submit-get" class="btn btn-primary">Execute @Model.CurrentMethod.Name GET</button>
                                    </div>
                                }
                                else
                                {
                                    <div id="submit-data-view">
                                        <button id="submit-get" class="btn btn-primary">Execute @Model.CurrentMethod.Name GET</button>
                                    </div>
                                }
                                <div id="loading-submit-view" class="jumbotron alert-info" hidden>
                                    <div><h3>Loading...</h3></div>
                                </div>
                            </div>
                        </div>
                        @if (Model.CurrentMethod.Parameters.Any())
                        {
                            <div id="parameter-view" class="panel panel-default">
                                <div class="panel-heading">
                                    <h3 class="panel-title">
                                        @Model.CurrentMethod.Name Parameters
                                    </h3>
                                </div>
                                <div class="panel-body">
                                    @foreach (var p in Model.CurrentMethod.Parameters)
                                    {
                                        <div>
                                            <label for="@p.Name">@p.Name:</label>
                                            @switch (p.Type.ToUpper())
                                            {
                                                case "INT32":
                                                case "INT64":
                                                case "DECIMAL":
                                                case "DOUBLE":
                                                case "INT32?":
                                                case "INT64?":
                                                case "DECIMAL?":
                                                case "DOUBLE?":
                                                    <input id="@p.Name" type="number" value="0" step="1" class="param-input" style="width:100px" />
                                                    break;
                                                case "DATETIME":
                                                case "DATETIME?":
                                                    <input id="@p.Name" type="date" class="param-input" />
                                                    break;
                                                case "BOOLEAN":
                                                    <select id="@p.Name" class="param-input">
                                                        <option value="false">false</option>
                                                        <option value="true">true</option>
                                                    </select>
                                                    break;
                                                case "BOOLEAN?":
                                                    <select id="@p.Name" class="param-input">
                                                        <option value="">null</option>
                                                        <option value="false">false</option>
                                                        <option value="true">true</option>
                                                    </select>
                                                    break;
                                                default:
                                                    <input id="@p.Name" type="text" class="param-input" style="width:250px" />
                                                    break;
                                            }
                                            <label for="data-type">Data Type:</label>
                                            <input id="data-type" type="text" value="@p.Type" readonly />
                                        </div>
                                    }

                                    <div>
                                        <button id="prepare-data" class="btn btn-primary">Prepare Data</button>
                                    </div>
                                    <div id="param-error" class="not-visible" hidden>
                                        <label for="error-msg" class="error alert-danger">Not all of the Parameters have been filled</label>
                                        <input id="error-msg" type="hidden" />
                                    </div>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div id="param-error" class="not-visible" hidden>
                            </div>
                        }
                        <div id="get-response-view" class="panel panel-default" hidden>
                            <div class="panel-heading">
                                <h3 class="panel-title">@Model.CurrentMethod.Name Response Data</h3>
                            </div>
                            <div class="panel-body">
                                <div id="raw-data-view">
                                    <textarea id="get-data" class="form-control" style="width: 900px; height: 500px; padding: 5px;" readonly></textarea>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    $(window).load(function () {
        var baseUrl = getDomain(); // this should get the appropriate environment URL if your API is in a different domain

        $('#base-url').val(baseUrl);
        $('#extended-url').val('/api/' + '@Model.CurrentApi.ControllerName' + '/' + '@Model.CurrentMethod.Name'); // this assumes the standard API URL used in ASP.NET MVC

        if ((baseUrl.toLowerCase().indexOf('dev') == -1) && (baseUrl.toLowerCase().indexOf('qa') == -1)) { // edit to match your own test environment URLs
            $('#production-warning').show();
        }
    });

    $('#prepare-data').click(function () {
        $('#param-error').hide().addClass('not-visible');

        var queryStr = '';
        var allParamsFilled = true;

        // retrieve all parameters
        $('.param-input').each(function (index, value) {
            if (index == 0) {
                queryStr += '?';
            }
            else {
                queryStr += '&';
            }

            queryStr += $(value).prop('id') + '=' + $(value).val().trim();

            if (!$(value).val()) {
                allParamsFilled = false;
            }
        });

        if (!allParamsFilled) {
            $('#param-error').show().removeClass('not-visible');
        }

        $('#query-string').val(queryStr);
        $('#query-str-view').show();
        $('#submit-data-view').show();
    });

    $('#submit-get').click(function () {
        if (!$('#param-error').hasClass('not-visible')) {
            swal({
                title: "Missing Parameters!",
                text: "Not having all of the Parameters filled could cause the @Model.CurrentMethod.Name method to create an error or bad data.",
                type: "warning",
                closeOnConfirm: false,
                confirmButtonClass: "btn-danger",
                confirmButtonText: "OK"
            },
            function (isConfirm) {
                executeGet();
            });
        }
        else {
            executeGet();
        }
    });

    function executeGet() {
        swal({
            title: "Are you sure you want to Execute GET on @Model.CurrentMethod.Name?",
            text: "This can potentially change data in our system.",
            type: "warning",
            showCancelButton: true,
            confirmButtonClass: "btn-danger",
            confirmButtonText: "Yes, Execute GET!",
            cancelButtonText: "No, cancel the Execute GET!",
            closeOnConfirm: true,
            closeOnCancel: true,
            showLoaderOnConfirm: false
        },
        function (isConfirm) {
            if (isConfirm) {
                var url = '';

                if ($('#base-url').val()) {
                    url = $('#base-url').val() + $('#extended-url').val() + $('#query-string').val();
                }
                else {
                    url = $('#extended-url').val() + $('#query-string').val();
                }
                
                $('#loading-submit-view').show();

                $.get(url)
                .success(function (response) {
                    $('#get-response-view').show();

                    $('#get-data').val(JSON.stringify(response, null, 4));

                    swal({
                        title: 'Success!',
                        text: 'Thanks for all the fish.',
                        type: 'success',
                        showCancelButton: false,
                        confirmButtonText: 'Ok',
                        closeOnConfirm: true
                    });
                })
                .error(function (err) {
                    $('#get-response-view').show();

                    $('#get-data').val("Status Code: " + err.status + " " + err.statusText + "\n" +
                                        "Response Text: " + err.responseText );

                    swal({
                        title: 'Failed!',
                        text: "The ships hung in the sky in much the same way that bricks don't.",
                        type: 'error',
                        showCancelButton: false,
                        confirmButtonText: 'Ok',
                        closeOnConfirm: true
                    });
                })
                .always(function () {
                    $('#loading-submit-view').hide();
                    $('body').removeClass('stop-scrolling');
                });
            } else {
                swal("Cancelled!", "The Execute GET will not be submitted.", "error");
            }
        });
    }
</script>
